<div class="flex h-screen">
  <!-- Left sidebar with nav -->
  <aside class="bg-blue-100 px-4 w-64 shrink-0">
    <!-- Nav bar -->
    {{>nav}}
  </aside>

  <!-- Main content area -->
  <main class="flex-1 overflow-y-auto">
    <div class="container mx-auto px-4 py-8">
      <h1 class="text-3xl font-bold text-center mb-8">Customize Your Pal</h1>
      
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Character Card Preview -->
        <div class="flex flex-col items-center">
          <h2 class="text-xl font-semibold mb-4">Your Pal</h2>
          {{> character-card 
            characterName=characterName 
            characterImage=characterImage
            characterProperties=characterProperties
          }}
        </div>
        
        <!-- Customization Controls -->
        <div class="bg-white rounded-lg shadow-lg p-6">
          <h2 class="text-xl font-semibold mb-4">Customize</h2>
          
          <form id="character-form" class="space-y-6">
            <!-- Name Input -->
            <div>
              <label for="characterName" class="block text-sm font-medium text-gray-700 mb-1">Character Name</label>
              <input type="text" id="characterName" name="characterName" value="{{characterName}}" 
                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
            </div>
            
            <!-- Character Type Selection -->
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Character Type</label>
              <div class="grid grid-cols-3 gap-3">
                <button type="button" class="character-type border-2 border-gray-300 hover:border-blue-500 rounded-lg p-2 text-center" data-type="warrior">
                  Warrior
                </button>
                <button type="button" class="character-type border-2 border-gray-300 hover:border-blue-500 rounded-lg p-2 text-center" data-type="mage">
                  Mage
                </button>
                <button type="button" class="character-type border-2 border-gray-300 hover:border-blue-500 rounded-lg p-2 text-center" data-type="archer">
                  Archer
                </button>
              </div>
            </div>
            
            <!-- Color Options -->
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Color Theme</label>
              <div class="flex space-x-3">
                <button type="button" class="w-8 h-8 rounded-full bg-red-500 border-2 border-transparent hover:border-gray-800"></button>
                <button type="button" class="w-8 h-8 rounded-full bg-blue-500 border-2 border-transparent hover:border-gray-800"></button>
                <button type="button" class="w-8 h-8 rounded-full bg-green-500 border-2 border-transparent hover:border-gray-800"></button>
                <button type="button" class="w-8 h-8 rounded-full bg-purple-500 border-2 border-transparent hover:border-gray-800"></button>
                <button type="button" class="w-8 h-8 rounded-full bg-yellow-500 border-2 border-transparent hover:border-gray-800"></button>
              </div>
            </div>
            
            <!-- Character Attributes -->
            <div class="space-y-4">
              <label class="block text-sm font-medium text-gray-700">Attributes</label>
              
              <div>
                <label for="strength" class="flex justify-between text-xs">
                  <span>Strength</span>
                  <span class="attribute-value">5</span>
                </label>
                <input type="range" id="strength" name="strength" min="1" max="10" value="5" 
                  class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer">
              </div>
              
              <div>
                <label for="agility" class="flex justify-between text-xs">
                  <span>Agility</span>
                  <span class="attribute-value">5</span>
                </label>
                <input type="range" id="agility" name="agility" min="1" max="10" value="5" 
                  class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer">
              </div>
              
              <div>
                <label for="intelligence" class="flex justify-between text-xs">
                  <span>Intelligence</span>
                  <span class="attribute-value">5</span>
                </label>
                <input type="range" id="intelligence" name="intelligence" min="1" max="10" value="5" 
                  class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer">
              </div>
            </div>
            
            <!-- Submit Button -->
            <div class="mt-6">
              <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:ring-2 focus:ring-blue-500">
                Save Character
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </main>
</div>

<script>
  // Basic script to update the character card based on form inputs
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('character-form');
    const nameInput = document.getElementById('characterName');
    const characterNameDisplay = document.querySelector('.character-card h2');
    const attributeSliders = document.querySelectorAll('input[type="range"]');
    const characterTypes = document.querySelectorAll('.character-type');
    
    // Update name in real-time
    nameInput.addEventListener('input', function() {
      characterNameDisplay.textContent = this.value || 'Unnamed Pal';
    });
    
    // Update attribute values display
    attributeSliders.forEach(slider => {
      slider.addEventListener('input', function() {
        this.previousElementSibling.querySelector('.attribute-value').textContent = this.value;
        updateCharacterProperties();
      });
    });
    
    // Handle character type selection
    characterTypes.forEach(button => {
      button.addEventListener('click', function() {
        characterTypes.forEach(btn => btn.classList.remove('border-blue-500', 'bg-blue-50'));
        this.classList.add('border-blue-500', 'bg-blue-50');
        // You would update the character image here based on type
      });
    });
    
    // Function to update character properties in the card
    function updateCharacterProperties() {
      // This would be expanded to update the properties in the character card
      // For now, this is a placeholder for that functionality
    }
    
    // Handle form submission
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      // Add logic to save character data
      alert('Character saved!');
    });
  });
</script>